@using Banglabazaar.Web.Code
@model Banglabazaar.Web.HomeViewModel.Shopviewmodel
   
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">SHOP</h1>
                </div><!-- /.page-title-heading -->
             
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="@Model.SearchTerm" name="Searchterm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)sortbyenums.Default, categoryID=Model.CategoryID,Searchterm=Model.SearchTerm })" class="@(Model.sortby.HasValue ? Model.sortby.Value == (int)sortbyenums.Default ? "active": string.Empty : string.Empty)">Default - Newest</a></li>
                            
                            <li><a href="@Url.Action("Index","Shop",new { sortBy = (int)sortbyenums.PriceLowtoHigh, categoryID=Model.CategoryID,Searchterm=Model.SearchTerm})" class="@(Model.sortby.HasValue ? Model.sortby.Value == (int)sortbyenums.PriceLowtoHigh ? "active": string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a href="@Url.Action("Index","Shop",new { sortBy = (int)sortbyenums.PriceHightoLow, categoryID=Model.CategoryID,Searchterm=Model.SearchTerm})" class="@(Model.sortby.HasValue ? Model.sortby.Value == (int)sortbyenums.PriceHightoLow ? "active": string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                  
                  
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                           Category List
                        </h5>
                        <div class="tag-list">
                           @*@foreach (var category in Model.FeaturedCategories)
                           {
                            <a href="@Url.Action("Index","Shop",new { categoryID =category.ID,sortBy=Model.sortby})" class="@(Model.CategoryID.HasValue &&Model.CategoryID==category.ID ? "active" : string.Empty)">@category.Name</a>
                            
                           }*@
                            <div class="dropdown">
                                <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" style="font-size:12px">
                                    Category Select
                                </button>
                                <div class="dropdown-menu">
                                    @foreach (var category in Model.FeaturedCategories.Where(x=>x.IsActive==true))
                                    {
                                        <a class="dropdown-item" href="@Url.Action("Index","Shop",new { categoryID =category.ID,sortBy=Model.sortby })">@category.Name</a>
                                    }
                                  
                                </div>
                            </div>
                           
                        </div>
                    </div>
                  <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div><!-- /.widget -->
                <a href="@Url.Action("Index","Shop")" class="btn btn-danger">Reset Filters</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
         
            <div class="col-md-9">
            <hr />
                <div id="productsDiv">
                
                    @if (Model.Products.Count>0)
                    {
                       
                            var filterproductviewmodel = @Model.filterproductsviewmodel;
                            filterproductviewmodel.Products = Model.Products;
                            filterproductviewmodel.Pager = Model.Pager;
                            filterproductviewmodel.CategoryID = Model.CategoryID;
                            filterproductviewmodel.sortby = Model.sortby;
                            filterproductviewmodel.SearchTerm = Model.SearchTerm;
                            Html.RenderPartial("FilterProducts", filterproductviewmodel);
                       

                            }
                            else
                            {
                                <label class="text-center text-danger col-md-9">No Products Found!!</label>
                            }


                </div>
              
              
            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

<script>
    var calltimeout;
    var priceSlider = $("#slide-range").slider(
        {
            
            range: true,
            min: 0,
            max: @Model.MaximumPrice,
            values: [0, @Model.MaximumPrice],
            slide: function (event, ui) {
                var minPrice=ui.values[0];
                var maxPrice=ui.values[1];
                $("#amount").val("PKR" + minPrice + ".00"+ " - " + maxPrice + ".00");
                clearTimeout(calltimeout);
                calltimeout=setTimeout(GetData,500);
                
             
            }
        })

    function GetData(minimumPrice,maximumPrice){

        console.log("getdatacalled");
        $.ajax({
            url: '@Url.Action("FilterProducts", "Shop")',
            data:{
                sortBy : '@Model.sortby',
                categoryID : '@Model.CategoryID',
                minimumprice: priceSlider.slider("values",0),
                maximumprice: priceSlider.slider("values",1)

            }
        }).done(function (response) {
            $("#productsDiv").html(response);

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    }
</script>